{"version":3,"file":"assets/js/chunks/reactComponent.js","mappings":"wYAGO,IAAMA,EAAiB,SAACC,GAC3B,I,IAAuDC,G,GAAfC,EAAAA,EAAAA,WAAS,G,EAAM,E,k5BAAhDC,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAMpC,OAJAI,EAAAA,EAAAA,YAAU,WACND,GAAgB,EACpB,GAAG,IAGCE,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,SAAG,oEACFH,GAAgBG,EAAAA,cAAA,KAAGC,UAAU,2CAA0C,wDACxED,EAAAA,cAAA,UACIE,QAAS,WACLC,MAAM,IAAIC,KACd,GACH,aAIDJ,EAAAA,cAAA,SAAG,cACHA,EAAAA,cAAA,WACIA,EAAAA,cAAA,YAAOK,KAAKC,UAAUZ,EAAO,KAAM,KAInD,E,0GAEAD,EAAec,UAAY,CACvBC,E,MAAGC,GAAAA,QC3BA,IAAMC,EAAO,W,MAChBC,QAAQC,IAAI,iC,EAERC,SAASC,iBAAiB,mB,knBAAoBC,KAAI,SAACC,GACnD,IAAMtB,EAAQW,KAAKY,MAAMD,EAAKE,QAAQxB,QACtCyB,EAAAA,EAAAA,GAAYH,EAAMhB,EAAAA,cAACP,EAAmBC,GAC1C,GACJ,C","sources":["webpack://codewelder/./src/components/reactComponent/components/ReactComponent.jsx","webpack://codewelder/./src/components/reactComponent/Init.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ReactComponent = (props) => {\n    const [pageRendered, setPageRendered] = useState(false);\n\n    useEffect(() => {\n        setPageRendered(true);\n    }, []);\n\n    return (\n        <>\n            <p>Scaffold component. This component contains a hydration example.</p>\n            {pageRendered && <p className=\"p-3 bg-slate-700 text-white inline-flex\">↪ This gets injected with useEffect on page render.↩</p>}\n            <button\n                onClick={() => {\n                    alert(new Date());\n                }}\n            >\n                Show Date\n            </button>\n\n            <p>All props:</p>\n            <pre>\n                <code>{JSON.stringify(props, null, 2)}</code>\n            </pre>\n        </>\n    );\n};\n\nReactComponent.propTypes = {\n    _: PropTypes.object,\n};\n","import React from 'react';\nimport {hydrateRoot} from 'react-dom/client';\nimport {ReactComponent} from './components/ReactComponent';\n\nexport const init = () => {\n    console.log('ReactComponent init() called');\n\n    [...document.querySelectorAll('.reactComponent')].map((node) => {\n        const props = JSON.parse(node.dataset.props);\n        hydrateRoot(node, <ReactComponent {...props} />);\n    });\n};\n"],"names":["ReactComponent","props","_useState2","useState","pageRendered","setPageRendered","useEffect","React","className","onClick","alert","Date","JSON","stringify","propTypes","_","PropTypes","init","console","log","document","querySelectorAll","map","node","parse","dataset","hydrateRoot"],"sourceRoot":""}